###############################################################################
# Install script for a default install
# Author: Jack Massey
# Date: 2016-05-18
###############################################################################


install_lite=(vim git tmux openssh-server)
install_master=(${install_lite[@]} gimp lm-sensors wine)
install_laptop=(${install_master[@]})
install_dev=(ckermit colordiff cscope curl dos2unix git-review nfs-common nfs-kernel-server wireshark)
install_nvidia=(mesa-utils nvidia-current nvidia-settings)

third_lite=()
third_master=(dropbox chrome expressvpn messenger slack skype)
third_laptop=()
third_dev=(docker)
third_nvidia=()

myexit() {
    echo "Error: $@"
    exit 1
}

# =============================================================================
# Configuration
# =============================================================================
install=(${install_master[@]} ${install_dev[@]})
third=(${third_master[@]} ${third_dev[@]})
swapsize=16

####packages=(lite master laptop dev nvidia)
####package_helps=(
####    "Basic installation"
####    "lite + common applications"
####    "master + laptop configuration"
####    "Packages used for my develop environment"
####    "Packages used for installing nvidia drivers"
####)
####
####usage() {
####    echo "usage: jsetup [--swap size] [--3rd] package ...
####
####Options:
####    --swap    Size of swapfile in GiB (default 8)
####    --3rd     Enable third part packages
####
####Packages:"
####    for i in ${!packages[@]}; do
####        printf '    %-15s %s\n' "${packages[$i]}" "${package_helps[$i]}"
####    done
####}
####
####badusage() {
####    usage
####    exit 1
####}
####
##### Process
##### Program options
##### -----------------------------------------------------------------------------
####install_packages=()
####third_packages=()
####install=()
####third=()
####third_party=false
####swapsize=8
####
####add_package() {
####    if [[ " ${packages[@]} " =~ " $1 " ]]; then
####        install_packages+=("$1")
####        return 0;
####    fi
####    myexit "Package $1 not found."
####}
####
####process() {
####
####    while [[ $# -gt 0 ]]; do
####        case $1 in
####            ("--swap") swapsize=$2; shift;;
####            ("--3rd") third_party=true;;
####            (*) add_package $1;;
####        esac
####        shift
####    done
####
####    for package in ${install_packages[@]}; do
####        echo $package
####        echo ${install_${package}[@]}
####        eval install+=(\${install_${package}[@]})
####    done
####    if [ third_party == true ]; then
####        return 0;
####    fi
####    for package in third_packages; do
####        eval third+=(\${third_${package}[@]})
####    done
####}



#process $@
#echo "Install Packages: ${install[@]}"
#echo "Third Party Packages: ${third[@]}"
#echo "Swapsize: $swapsize"
#exit 0

# ============================================================================
# ============================================================================
# Third Party
# ============================================================================

# myinstall_docker() {
#     sudo apt-get update
#     sudo apt-get install apt-transport-https ca-certificates
#     sudo apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D
# 
# }















# Prepare for super user usage
# -----------------------------------------------------------------------------
sudo -v


# Extract our git configurations
# Grabs the root path, extracts it to /root and ~/ and checks out the lite
# branch
# -----------------------------------------------------------------------------
gitroot=$(git rev-parse --show-toplevel)
if [[ "$(basename \"${gitroot}\")" != "config" ]]; then
    myexit "Script not contained in valid git directory"
fi
cp -r "${gitroot}/.*" "~/"
sudo cp -r "${gitroot}/.*" "/root/"
cd "/root"
git checkout lite
cd "~/"
git checkout lite


# Create swapfile
# -----------------------------------------------------------------------------
sudo dd if=/dev/zero of=/swapfile bs=1024 count=65536
sudo chmod 0600 /swapfile
sudo mkswap /swapfile
sudo swapon /swapfile
sudo echo "/swapfile swap swap defaults 0 0" >> /etc/fstab



# Upgrade the system
# -----------------------------------------------------------------------------
sudo apt-get update || myexit "Failed to update"
sudo apt-get upgrade || myexit "Failed to upgrade"


# Install applications
# -----------------------------------------------------------------------------
sudo apt-get install ${install[@]}


# Install third party
# -----------------------------------------------------------------------------
# TODO implement this



# Setup gnome
# -----------------------------------------------------------------------------
echo "Extensions:
    Alternate Tab
    Impatiance
    Launch New Instance
    Native window placement
    No topleft hotcorner
    Redmine Issues
    Skype integration
    Topicons
    Gtile
"
echo "Settings:
Make caps lock an additional escape
"













echo "Please install the third party applications: ${third[@]}"
